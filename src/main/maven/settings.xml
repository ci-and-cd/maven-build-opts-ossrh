<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                        http://maven.apache.org/xsd/settings-1.0.0.xsd">

    <interactiveMode/>
    <!-- org.springframework.cloud:spring-cloud-contract-maven-plugin can not substitute variables in localRepository tag correctly -->
    <!--<localRepository>${user.home}/.m2/repository</localRepository>-->

    <mirrors>
        <!-- @formatter:off -->
        <!-- Do not use variable substitution in mirrors when using an IDE, it does not works. -->
        <!-- mirrorOf: pom.xml repositories repository id -->
        <!--<mirrorOf>central</mirrorOf>-->
        <!--<mirrorOf>external:*,!github-mvn-repo-wagon-maven-plugin</mirrorOf>-->
        <!--<mirror><id>mirror</id><mirrorOf>*</mirrorOf><name>mirror</name><url>http://nexus3:28081/nexus/repository/maven-public/</url></mirror>-->
        <!--<mirror><id>mirror</id><mirrorOf>*</mirrorOf><url>https://nexus3.infra.top/nexus/repository/maven-public/</url></mirror>-->

        <!-- @formatter:on -->
    </mirrors>

    <offline/>

    <pluginGroups>
        <pluginGroup>com.amashchenko.maven.plugin</pluginGroup>
        <pluginGroup>com.github.ferstl</pluginGroup>
        <pluginGroup>com.github.spotbugs</pluginGroup>
        <pluginGroup>io.quarkus</pluginGroup>
        <pluginGroup>io.takari</pluginGroup>
        <pluginGroup>org.apache.maven.plugins</pluginGroup>
        <pluginGroup>org.apache.tomcat.maven</pluginGroup>
        <pluginGroup>org.codehaus.mojo</pluginGroup>
        <pluginGroup>org.owasp</pluginGroup>
        <pluginGroup>org.reficio</pluginGroup>
        <pluginGroup>org.sonarsource.scanner.maven</pluginGroup>
        <pluginGroup>org.springframework.boot</pluginGroup>
    </pluginGroups>

    <profiles>
        <!-- @formatter:off -->
        <profile>
            <id>default-public-repositories</id>
            <activation><activeByDefault>true</activeByDefault></activation>
            <repositories>
                <!-- Make artifacts in OSSRH repositories available -->
                <repository>
                    <id>ossrh-releases</id>
                    <name>central releases</name>
                    <url>https://oss.sonatype.org/content/repositories/releases/</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </repository>
                <repository>
                    <id>ossrh-snapshots</id>
                    <name>central snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                    <releases><enabled>false</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>central</id>
                    <name>central</name>
                    <url>https://repo1.maven.org/maven2</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>false</enabled></snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
        <!-- @formatter:on -->
    </profiles>

    <proxies>
        <!--<proxy><id>http-proxy</id><active>true</active><protocol>http</protocol><host>127.0.0.1</host><port>8080</port><nonProxyHosts>127.0.0.1</nonProxyHosts></proxy>-->
        <!--<proxy><id>http-proxy</id><active>true</active><protocol>socks5</protocol><host>127.0.0.1</host><port>1080</port><nonProxyHosts>127.0.0.1</nonProxyHosts></proxy>-->
    </proxies>

    <servers>
        <!-- @formatter:off -->
        <server>
            <id>docker-hub</id>
            <username>${env.CI_OPT_DOCKER_REGISTRY_USER}</username><password>${env.CI_OPT_DOCKER_REGISTRY_PASS}</password>
            <configuration><email>${env.CI_OPT_DOCKER_DOCKERHUB_MAIL}</email></configuration>
        </server>
        <!-- for dockerfile-maven-plugin, see: https://github.com/spotify/dockerfile-maven/blob/master/docs/authentication.md -->
        <server>
            <id>docker.io</id>
            <username>${env.CI_OPT_DOCKER_REGISTRY_USER}</username><password>${env.CI_OPT_DOCKER_REGISTRY_PASS}</password>
        </server>
        <server><id>github</id><password>${env.CI_OPT_OSSRH_GIT_AUTH_TOKEN}</password></server>
        <!--
        To fix issue: gpg: signing failed: Inappropriate ioctl for device
        1.
        ~/.gnupg/gpg.conf:
        use-agent
        pinentry-mode loopback
        2.
        ~/.gnupg/gpg-agent.conf:
        allow-loopback-pinentry
        3.
        echo RELOADAGENT | gpg-connect-agent
        -->
        <server><id>gpg.passphrase</id><passphrase>${env.CI_OPT_GPG_PASSPHRASE}</passphrase></server>
        <server><id>ossrh-mvnsite</id><username>${env.CI_OPT_OSSRH_MVNSITE_USERNAME}</username><password>${env.CI_OPT_OSSRH_MVNSITE_PASSWORD}</password></server>
        <server><id>ossrh-snapshots</id><username>${env.CI_OPT_OSSRH_NEXUS2_USER}</username><password>${env.CI_OPT_OSSRH_NEXUS2_PASS}</password></server>
        <server><id>ossrh-staging</id><username>${env.CI_OPT_OSSRH_NEXUS2_USER}</username><password>${env.CI_OPT_OSSRH_NEXUS2_PASS}</password></server>
        <!-- @formatter:on -->
    </servers>

    <usePluginRegistry/>
</settings>
